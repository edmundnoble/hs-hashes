name: Build

on:
  push:

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc:
        - '9.2'
        - '9.4'
        - '9.6'
        - '9.10'
        cabal:
        - '3.12'
        os:
        - 'ubuntu-20.04'
        - 'ubuntu-22.04'
        - 'macos-latest'
        cryptonite:
        - '-test-cryptonite -benchmark-cryptonite'
        - '+test-cryptonite +benchmark-cryptonite'
        openssl:
        - '+with-openssl'
        - '-with-openssl'

    steps:

    # Setup
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install GHC and Cabal
      uses: haskell-actions/setup@v2
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}

    - name: Check OpenSSL Version
      run: |
        which openssl
        openssl version

    # Local cabal config
    - name: Create local cabal config
      run: |
        cat > cabal.project.local <<EOF
        package hashes
          documentation: True
          benchmarks: True
          tests: True
          flags: ${{ matrix.openssl }} ${{ matrix.cryptonite }}
        EOF

    # Restore Packages from Caches
    - name: Restore cache ~/.cabal/packages and ~/.cabal/store
      id: deps-cache-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
        key: deps-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.local') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.ghc }}-
          ${{ runner.os }}-${{ matrix.ghc }}-
        # the second restore key is temporary

    # Restore dist-newstyle
    - name: Cache dist-newstyle
      uses: actions/cache@v4
      with:
        path: |
          dist-newstyle
        key: dist-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.local') }}
        restore-keys: |
          dist-${{ runner.os }}-${{ matrix.ghc }}-
          ${{ runner.os }}-${{ matrix.ghc }}-
        # the second restore key is temporary
        save-always: true

    # Build
    - name: Update package database
      run: cabal update

    - name: Configure build
      run: |
        cabal build all --dry-run
        cabal freeze
        cat cabal.project.freeze

    - name: Show outdated packages
      run: cabal outdated

    - name: Install build dependencies
      run: cabal build --only-dependencies

    # Save packages
    - name: Save cache for ~/.cabal/packages and ~/.cabal/store
      uses: actions/cache/save@v4
      if: always()
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
        key: ${{ steps.deps-cache-restore.outputs.cache-primary-key }}

    - name: Build library
      run: cabal build

    # Tests
    - name: Run Tests
      run: cabal test test:tests

    # Benchmarks
    - name: Run Benchmarks
      run: cabal bench bench:benchmarks

